{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","renderGoods","goods","length","string","slice","join","endOfstring","changeList","item","includes","setState","prevState","filter","good","this","className","map","type","onClick","indexOf","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,YAAc,SAACC,GACb,GAAIA,EAAMC,OAAS,EAAG,CACpB,IAAMC,EAASF,EAAMG,MAAM,EAAGH,EAAMC,OAAS,GAAGG,KAAK,MAC/CC,EAAcL,EAAMA,EAAMC,OAAS,GAEzC,MAAM,GAAN,OAAUC,EAAV,gBAAwBG,EAAxB,gBAGF,MAAM,GAAN,OAAUL,EAAM,GAAhB,iB,EAGFM,WAAa,SAACC,GACZ,IAAQT,EAAiB,EAAKD,MAAtBC,aAEJA,EAAaU,SAASD,GACxB,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAC1BZ,aAAcY,EAAUZ,aAAaa,QAAO,SAAAC,GAAI,OAAIA,IAASL,SAG/D,EAAKE,SAAS,CAAEX,aAAa,GAAD,mBAAMA,GAAN,CAAoBS,O,4CAIpD,WAAU,IAAD,OACCT,EAAiBe,KAAKhB,MAAtBC,aAER,OACE,sBAAKgB,UAAU,eAAf,UACE,oBAAIA,UAAU,YAAd,SACGhB,EAAaG,OAAS,EACnB,oBACAY,KAAKd,YAAYD,KAEvB,oBAAIgB,UAAU,iDAAd,SACGnB,EAAgBoB,KAAI,SAAAR,GAAI,OACvB,qBAEEO,UAAS,wFAAmFhB,EAAaU,SAASD,IAAS,SAAlH,KAFX,UAIE,mBAAGO,UAAU,uBAAb,SAAqCP,IACrC,wBACES,KAAK,SACLC,QAAS,kBAAM,EAAKX,WAAWC,IAC/BO,UAAS,kBAAchB,EAAaU,SAASD,GAAoB,SAAZ,UAA5C,6BAHX,SAKGT,EAAaU,SAASD,GAAQ,SAAW,aATvCZ,EAAgBuB,QAAQX,SAcnC,wBACES,KAAK,SACLF,UAAU,mCACVG,QAAS,kBAAM,EAAKR,SAAS,CAAEX,aAAc,MAH/C,0B,GAvDUqB,IAAMC,WAmETxB,ICpFfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c0de1d1e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood : string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  renderGoods = (goods: string[]): string => {\n    if (goods.length > 1) {\n      const string = goods.slice(0, goods.length - 1).join(', ');\n      const endOfstring = goods[goods.length - 1];\n\n      return `${string} and ${endOfstring} is selected`;\n    }\n\n    return `${goods[0]} is selected`;\n  };\n\n  changeList = (item: string) => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.includes(item)) {\n      this.setState(prevState => ({\n        selectedGood: prevState.selectedGood.filter(good => good !== item),\n      }));\n    } else {\n      this.setState({ selectedGood: [...selectedGood, item] });\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"container-sm\">\n        <h1 className=\"fs-3 pb-5\">\n          {selectedGood.length < 1\n            ? 'No goods selected'\n            : this.renderGoods(selectedGood)}\n        </h1>\n        <ul className=\"list-group list d-flex justify-content-between\">\n          {goodsFromServer.map(item => (\n            <li\n              key={goodsFromServer.indexOf(item)}\n              className={`list-group-item row d-flex align-items-center justify-content-between fw-bold ${selectedGood.includes(item) && 'active'} `}\n            >\n              <p className=\"col-2 align-self-end\">{item}</p>\n              <button\n                type=\"button\"\n                onClick={() => this.changeList(item)}\n                className={`btn btn-${!selectedGood.includes(item) ? 'primary' : 'danger'} btn-sm m-2 col-2 fw-bold`}\n              >\n                {selectedGood.includes(item) ? 'Remove' : 'Select'}\n              </button>\n            </li>\n          ))}\n        </ul>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger my-3 me-2 fw-bold\"\n          onClick={() => this.setState({ selectedGood: [] })}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}